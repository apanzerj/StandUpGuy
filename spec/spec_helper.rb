require 'webmock/rspec'
require 'json'
require 'byebug'
# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus
  config.mock_with :mocha

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

def expect_zendesk(subdomain, endpoint)
  ENV["zendesk_user"] = "foo@bar.com"
  ENV["zendesk_token"] = "123abc"
  crazy_piece = "foo%40bar.com%2Ftoken:123abc"
  stub_request(:get, %r{#{subdomain}.zendesk.com.#{endpoint}})
end

def create_test_file!
  datafile = Tempfile.new(["standup", ".json"], File.join(`pwd`.chop, "test"))
  StandUpGuy::Item.any_instance.stubs(:filename).returns(datafile.path)
  StandUpGuy::Report.any_instance.stubs(:filename).returns(datafile.path)
  datafile
end

def expect_datafile(file, pattern)
  data = File.read(file.path)
  expect(data).to match(pattern)
end

def key(date=:today)
  return DateTime.now.strftime("%Y-%m-%d") if date==:today
  return DateTime.strptime(date,"%Y-%m-%d") if date.is_a?(String)
end